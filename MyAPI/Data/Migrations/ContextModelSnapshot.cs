// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAPI.Data;

#nullable disable

namespace MyAPI.Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("MyAPI.Entities.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("courseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("courseDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("credits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("falcutyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("instructor")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("falcutyId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MyAPI.Entities.Falcuty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MyAPI.Entities.Course", b =>
                {
                    b.HasOne("MyAPI.Entities.Falcuty", "falcuty")
                        .WithMany()
                        .HasForeignKey("falcutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("falcuty");
                });
#pragma warning restore 612, 618
        }
    }
}
