// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyAPI.Data;

#nullable disable

namespace MyAPI.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240513002315_SeedFaculties")]
    partial class SeedFaculties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("MyAPI.Entities.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("courseCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("courseDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("credits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("facultyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("instructor")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("facultyId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MyAPI.Entities.Faculty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Applied Sciences"
                        },
                        new
                        {
                            id = 2,
                            name = "Arts and Social Sciences"
                        },
                        new
                        {
                            id = 3,
                            name = "Education"
                        },
                        new
                        {
                            id = 4,
                            name = "Business"
                        },
                        new
                        {
                            id = 5,
                            name = "Communication, Art and Technology"
                        },
                        new
                        {
                            id = 6,
                            name = "Environment"
                        },
                        new
                        {
                            id = 7,
                            name = "Health Sciences"
                        },
                        new
                        {
                            id = 8,
                            name = "Science"
                        });
                });

            modelBuilder.Entity("MyAPI.Entities.Course", b =>
                {
                    b.HasOne("MyAPI.Entities.Faculty", "faculty")
                        .WithMany()
                        .HasForeignKey("facultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faculty");
                });
#pragma warning restore 612, 618
        }
    }
}
